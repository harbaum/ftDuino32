--- modmachine.c.orig	2022-11-27 16:04:23.034175631 +0100
+++ modmachine.c	2022-11-27 17:11:53.408154652 +0100
@@ -270,6 +270,31 @@
 }
 MP_DEFINE_CONST_FUN_OBJ_1(machine_enable_irq_obj, machine_enable_irq);
 
+#if ESP_IDF_VERSION >= ESP_IDF_VERSION_VAL(4, 4, 0)
+STATIC mp_obj_t machine_base_mac_addr(size_t n_args, const mp_obj_t *args) {
+    if(n_args == 0) {
+        uint8_t mac[6];
+	esp_err_t ret = esp_base_mac_addr_get(mac);
+	if (ret != ESP_OK)
+	    mp_raise_ValueError(MP_ERROR_TEXT("Getting base MAC addr failed"));
+	
+	return mp_obj_new_bytes(mac, 6);
+    }
+
+    mp_buffer_info_t bufinfo;
+    mp_get_buffer_raise(args[0], &bufinfo, MP_BUFFER_READ);
+    if(bufinfo.len != 6)
+        mp_raise_ValueError(MP_ERROR_TEXT("Not a valid MAC address"));
+    
+    esp_err_t ret = esp_base_mac_addr_set(bufinfo.buf);
+    if (ret != ESP_OK)
+        mp_raise_ValueError(MP_ERROR_TEXT("Changing base MAC addr failed"));
+
+    return mp_const_none;
+}
+STATIC MP_DEFINE_CONST_FUN_OBJ_VAR_BETWEEN(machine_base_mac_addr_obj, 0, 1, machine_base_mac_addr);
+#endif
+
 STATIC const mp_rom_map_elem_t machine_module_globals_table[] = {
     { MP_ROM_QSTR(MP_QSTR___name__), MP_ROM_QSTR(MP_QSTR_umachine) },
 
@@ -342,6 +367,11 @@
     { MP_ROM_QSTR(MP_QSTR_TIMER_WAKE), MP_ROM_INT(ESP_SLEEP_WAKEUP_TIMER) },
     { MP_ROM_QSTR(MP_QSTR_TOUCHPAD_WAKE), MP_ROM_INT(ESP_SLEEP_WAKEUP_TOUCHPAD) },
     { MP_ROM_QSTR(MP_QSTR_ULP_WAKE), MP_ROM_INT(ESP_SLEEP_WAKEUP_ULP) },
+
+    #if ESP_IDF_VERSION >= ESP_IDF_VERSION_VAL(4, 4, 0)
+    // get/set base mac address
+    { MP_ROM_QSTR(MP_QSTR_base_mac_addr), MP_ROM_PTR(&machine_base_mac_addr_obj) },
+    #endif
 };
 
 STATIC MP_DEFINE_CONST_DICT(machine_module_globals, machine_module_globals_table);
